#include <iostream>
#include "Sensor.h"
#include "DataProcessor.h"
#include "UserInputHandler.h"

int main()
{
	UserInputHandler* inputHandler = new UserInputHandler(); // Create an instance of the UserInputHandler class to handle user inputs
	inputHandler->getInputs(); // Get inputs from the user for data generation parameters

	// Create an instance of the Sensor class with parameters passed from the UserInputHandler
	Sensor* s = new Sensor(inputHandler->getNumDataPoints(),
						  (DataGenerationTiming)inputHandler->getDataTimingOption(),
						  inputHandler->getDataTimingPeriod(),
						  (DataType)inputHandler->getDataType(),
						  inputHandler->getRangeMin(),
						  inputHandler->getRangeMax());

	// Create an instance of the DataProcessor class to process the generated data
	DataProcessor* dp = new DataProcessor(inputHandler->getMovingAverageWindowSize(), inputHandler->getSubsetSize());

    s->collectAndStoreDataPoints(); // Collect and store data points generated by the sensor
	dp->setRawData(s->getData());   // Pass the raw data from Sensor to the DataProcessor for processing
	dp->movingAverageFilter();	    // Apply the moving average filter to the raw data
	dp->calculateAverages();		// Calculate the average of the raw and processed data
	dp->calculateSubsetAverages();  // Calculate the average for each subset of data (for both raw and processed data)

	// Output statistics for the raw data (e.g., number of data points, min, max, average)
	std::cout << "\nNumber of data points: " << dp->getRawData().size() << "\n";
	std::cout << "Minimum value: " << dp->getRawDataMin() << "\n";
	std::cout << "Maximum value: " << dp->getRawDataMax() << "\n";
	std::cout << "Average value: " << dp->getRawAverage() << "\n";

	// Output statistics for the processed data (e.g., number of data points, min, max, average)
	std::cout << "\nNumber of data points: " << dp->getProcessedData().size() << "\n";
	std::cout << "Minimum value: " << dp->getProcessedDataMin() << "\n";
	std::cout << "Maximum value: " << dp->getProcessedDataMax() << "\n";
	std::cout << "Average value: " << dp->getProcessedAverage() << "\n";

	// Ask the user if they want to save the generated raw and processed data to a file
	inputHandler->saveDataToFile(dp->getRawData(), dp->getProcessedData());

    std::cin.get();
}

